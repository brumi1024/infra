##################
# Global options #
##################
{
    metrics

    dynamic_dns {
      provider cloudflare {$CF_API_TOKEN}
      domains {
        {$DOMAIN} @ www *
      }
    }

    admin 0.0.0.0:{$PORT_CADDY_ADMIN}
}


############
# Snippets #
############
(cloudflare) {
  tls {
    dns cloudflare {$CF_API_TOKEN}
    resolvers 1.1.1.1 1.0.0.1 # Needed for VPS
  }

  encode zstd gzip
}

(log_common) {
  log {
    output file /var/log/caddy/caddy_access.log
  }
}

(authenticate) {
      # always forward outpost path to actual outpost
      reverse_proxy /outpost.goauthentik.io/* http://homelab-vps.{$TAILNET}:{$PORT_AUTHENTIK_HTTP}

      # forward authentication to outpost
      forward_auth http://homelab-vps.{$TAILNET}:{$PORT_AUTHENTIK_HTTP} {
          uri /outpost.goauthentik.io/auth/caddy

          # capitalization of the headers is important, otherwise they will be empty
          copy_headers X-Authentik-Username X-Authentik-Groups X-Authentik-Entitlements X-Authentik-Email X-Authentik-Name X-Authentik-Uid X-Authentik-Jwt X-Authentik-Meta-Jwks X-Authentik-Meta-Outpost X-Authentik-Meta-Provider X-Authentik-Meta-App X-Authentik-Meta-Version authorization

          # optional, in this config trust all private ranges, should probably be set to the outposts IP
          trusted_proxies private_ranges
      }
}

############
# Routing  #
############

# Admin

susanoo.{$ADMIN_DOMAIN} {
    import cloudflare
    import log_common
    reverse_proxy https://susanoo.{$TAILNET}:{$PORT_PROXMOX_HTTPS}
}

eurus.{$ADMIN_DOMAIN} {
    import cloudflare
    import log_common
    reverse_proxy https://eurus.{$TAILNET}:{$PORT_PROXMOX_HTTPS}
}

pbs.{$ADMIN_DOMAIN} {
    import cloudflare
    import log_common
    reverse_proxy https://proxmox-backup-server.{$TAILNET}:{$PORT_PBS_HTTPS} {
        transport http {
            tls
            tls_insecure_skip_verify
        }
    }
}

truenas.{$ADMIN_DOMAIN} {
    import cloudflare
    import log_common
    reverse_proxy truenas-scale.{$TAILNET}
}

komodo.{$DOMAIN} {
    import cloudflare
    import log_common
    reverse_proxy docker:9120
}

beszel.{$DOMAIN} {
    import cloudflare
    import log_common
    reverse_proxy homelab-vps.{$TAILNET}:{$PORT_BESZEL_HTTP}
}

uptime.{$DOMAIN} {
    import cloudflare
    import log_common
    import authenticate
    reverse_proxy homelab-vps.{$TAILNET}:{$PORT_UPTIME_KUMA}
}

# Auth

auth.{$DOMAIN} {
    import cloudflare
    reverse_proxy homelab-vps.{$TAILNET}:{$PORT_AUTHENTIK_HTTP}
}

# Home Assistant

homeassistant.{$DOMAIN} {
  import cloudflare
  reverse_proxy homeassistant:{$PORT_HOMEASSISTANT_HTTP}
}

homeassistant.seq.{$DOMAIN} {
  import cloudflare
  reverse_proxy homeassistant-seq:{$PORT_HOMEASSISTANT_HTTP}
}

homeassistant.kalasz.{$DOMAIN} {
  import cloudflare
  reverse_proxy homeassistant-kalasz:{$PORT_HOMEASSISTANT_HTTP}
}

# Media Stack

prowlarr.{$DOMAIN} {
    import authenticate
    import cloudflare
    reverse_proxy docker:{$PORT_PROWLARR_HTTP}
}

sonarr.{$DOMAIN} {
    import authenticate
    import cloudflare
    reverse_proxy docker:{$PORT_SONARR_HTTP}
}

radarr.{$DOMAIN} {
    import authenticate
    import cloudflare
    reverse_proxy docker:{$PORT_RADARR_HTTP}
}

recommendarr.{$DOMAIN} {
    import authenticate
    import cloudflare
    reverse_proxy docker:{$PORT_RECOMMENDARR}
}

overseerr.{$DOMAIN} {
    import cloudflare
    reverse_proxy docker:{$PORT_OVERSEERR_HTTP}
}

tautulli.{$DOMAIN} {
    import cloudflare
    reverse_proxy docker:{$PORT_TAUTULLI_HTTP}
}

qbittorrent.{$DOMAIN} {
    import authenticate
    import cloudflare
    reverse_proxy docker:{$PORT_QBITTORRENT_HTTP}
}

plex.{$DOMAIN} {
    import cloudflare
    reverse_proxy plex:{$PORT_PLEX_HTTP}
}

# Sequoia

zephyrus.{$DOMAIN} {
    import cloudflare
    reverse_proxy zephyrus:{$PORT_ZEPHYRUS_HTTP}
}

frigate.seq.{$DOMAIN} {
    import authenticate
    import cloudflare
    reverse_proxy https://sequoia-docker:{$PORT_FRIGATE_HTTP} {
        transport http {
                tls
                tls_insecure_skip_verify
        }
    }
}

# Services

dash.{$DOMAIN} {
    import authenticate
    import cloudflare
    reverse_proxy homelab-vps.{$TAILNET}:{$PORT_DASH_HTTP}
}

actual.{$DOMAIN} {
    import cloudflare
    reverse_proxy docker:{$PORT_ACTUAL_HTTP}
}

paperless.{$DOMAIN} {
    import cloudflare
    reverse_proxy docker:{$PORT_PAPERLESS_HTTP}
}

immich.{$DOMAIN} {
    import cloudflare
    reverse_proxy docker:{$PORT_IMMICH_HTTP}
}